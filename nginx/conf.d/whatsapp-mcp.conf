# Rate limiting
limit_req_zone $binary_remote_addr zone=mcp_limit:10m rate=100r/s;

# Upstream server
upstream whatsapp_mcp {
    server whatsapp-mcp-server:8300;
}

# Log format detallado para debugging
log_format detailed '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    '"$http_authorization" "$http_x_forwarded_for" '
                    'upstream: $upstream_addr '
                    'request_time: $request_time '
                    'upstream_response_time: $upstream_response_time';

# HTTPS only server (port 443)
server {
    listen 443 ssl http2;
    server_name rzdevquality.com;

    # Logging detallado - TODAS las peticiones
    access_log /var/log/nginx/claude-access.log detailed;
    error_log /var/log/nginx/claude-error.log debug;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/rzdevquality.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rzdevquality.com/privkey.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    client_max_body_size 100M;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # CORS headers (needed for web clients like Claude.ai)
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
    add_header Access-Control-Expose-Headers "Mcp-Session-Id" always;
    add_header Access-Control-Max-Age 1728000 always;

    # MCP Messages endpoint - HTTP Streamable (supports both GET and POST)
    location /messages {
        limit_req zone=mcp_limit burst=20 nodelay;
        
        proxy_pass http://whatsapp_mcp/messages;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        
        # Support for long-running SSE connections
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_buffering off;
        proxy_cache off;
        
        # SSE specific headers
        proxy_set_header Connection '';
        chunked_transfer_encoding off;
    }

    # Root redirect
    location = / {
        return 302 https://support.claude.com/en/articles/11503834-building-custom-connectors-via-remote-mcp-servers;
    }
}

# Puerto 8443 alternativo (Claude.ai might try this port)
server {
    listen 8443 ssl http2;
    server_name rzdevquality.com;

    # Logging detallado - TODAS las peticiones
    access_log /var/log/nginx/claude-8443-access.log detailed;
    error_log /var/log/nginx/claude-8443-error.log debug;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/rzdevquality.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/rzdevquality.com/privkey.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    client_max_body_size 100M;
    
    # CORS headers
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept" always;
    add_header Access-Control-Expose-Headers "Mcp-Session-Id" always;
    add_header Access-Control-Max-Age 1728000 always;

    # MCP endpoint - HTTP Streamable (supports both GET and POST)
    location /messages {
        limit_req zone=mcp_limit burst=20 nodelay;

        proxy_pass http://whatsapp_mcp/messages;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        
        # Support for long-running SSE connections
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_buffering off;
        proxy_cache off;
        
        # SSE specific headers
        proxy_set_header Connection '';
        chunked_transfer_encoding off;
    }

    # Root redirect
    location = / {
        return 302 https://support.claude.com/en/articles/11503834-building-custom-connectors-via-remote-mcp-servers;
    }
}
