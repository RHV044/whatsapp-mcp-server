name: Build and Deploy

on:
  push:
    branches:
      - main

env:
  DOCKER_USERNAME: rhv044
  BRIDGE_IMAGE: rhv044/whatsapp-bridge
  MCP_IMAGE: rhv044/whatsapp-mcp-server

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push WhatsApp Bridge
        uses: docker/build-push-action@v5
        with:
          context: ./whatsapp-bridge
          file: ./whatsapp-bridge/Dockerfile
          push: true
          tags: |
            ${{ env.BRIDGE_IMAGE }}:latest
            ${{ env.BRIDGE_IMAGE }}:prod
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push WhatsApp MCP Server
        uses: docker/build-push-action@v5
        with:
          context: ./whatsapp-mcp-server
          file: ./whatsapp-mcp-server/Dockerfile
          push: true
          tags: |
            ${{ env.MCP_IMAGE }}:latest
            ${{ env.MCP_IMAGE }}:prod
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Server
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "docker-compose.yml"
          target: "/opt/whatsapp-mcp-server/"
          overwrite: true

      - name: Copy nginx config to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "nginx/*"
          target: "/opt/whatsapp-mcp-server/"
          overwrite: true

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /opt/whatsapp-mcp-server
            echo "🛑 Stopping old containers..."
            docker compose down
            
            echo "📥 Pulling latest images from Docker Hub..."
            docker compose pull
            
            echo "🚀 Starting services with new images (force recreate)..."
            docker compose up -d --force-recreate
            
            echo "🧹 Cleaning up old images..."
            docker image prune -af
            
            echo "✅ Deployment completed!"
            docker compose ps

      - name: Verify Deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "⏳ Waiting for services to start..."
            sleep 15
            
            cd /opt/whatsapp-mcp-server
            
            echo "📊 Service Status:"
            docker compose ps
            
            echo ""
            echo "📝 Recent Logs:"
            docker compose logs --tail=30 whatsapp-mcp-server
            
            echo ""
            echo "🔐 Checking OAuth Configuration:"
            docker compose exec -T whatsapp-mcp-server env | grep -E "OAUTH|SERVER_BASE_URL" || echo "⚠️  OAuth vars not found"
            
            echo ""
            echo "🌐 Testing OAuth Endpoints:"
            curl -s -f https://rzdevquality.com:8443/.well-known/oauth-authorization-server > /dev/null && echo "✅ OAuth Authorization Server: OK" || echo "❌ OAuth Authorization Server: FAILED"
            curl -s -f https://rzdevquality.com:8443/.well-known/oauth-protected-resource > /dev/null && echo "✅ OAuth Protected Resource: OK" || echo "❌ OAuth Protected Resource: FAILED"
            curl -s -f https://rzdevquality.com:8443/health > /dev/null && echo "✅ Health Check: OK" || echo "❌ Health Check: FAILED"

